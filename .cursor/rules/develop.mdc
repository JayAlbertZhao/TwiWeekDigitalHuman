---
description: whenever developing anything, and when the word develop/开发 is mentioned
alwaysApply: false
---
# 开发内容分类规则
你被要求开发的内容分为项目、脚本、函数三类，依照如下规则进行区分：
项目：项目是一系列程序的集合，或一个具有多个功能和复杂组件的程序，通常需要多组件协调和api通信。
脚本：脚本是实现一个相对简单的特定功能的程序，通常仅在一个文件中完成所有功能。
函数：函数是一个程序中的一个具体的函数或一个类中的一个具体的方法。
以下描述规则时如果使用*星号*强调适用范围，则表示排他地只适用于其中某类内容。

# 项目文档规则
如果你被要求开始构建一个新*项目*，*必须*首先与用户讨论完成一份*文档*；
这个文档应当作为项目的方案使用，因此应当较为详细；
完成文档时适用**交互性规则**，即，每完成一个部分，应该征求用户的建议。
完成文档时应该按照以下要求*逐步进行*：
1. 明确项目总目标，对外部的输入输出是什么，实现什么功能。
2. 明确项目结构拆分，有哪些模块，分别应该实现什么功能，使用什么技术栈，如果要求中包含了具体的结构，以要求为准。
3. 明确工作流，一次标准的工作中，按顺序，每个模块应该收到什么，需要做什么，应该输出什么。
4. 明确各模块之间的交互，什么模块应该向什么模块提供什么功能，什么数据，具体的数据格式和功能api如何
5. 明确开发流程，以流程形式给出模块开发、测试、验证、数据准备等的顺序。

# 交互性规则
当你被要求开发*项目*或*脚本*时，不要直接给出结果，而是：
对于方案就是结果的情形，首先部分完成方案，*与用户确认*无误后，继续逐部分完成整个方案；
对于需要具体实现的情形，首先给出方案，*与用户确认*无误后，将方案具体实现。
